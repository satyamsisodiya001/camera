let capturedImages = [];

const video = document.getElementById("video");
const captureBtn = document.getElementById("capture-btn");
const photos = document.getElementById("photos");

// Start camera
navigator.mediaDevices
  .getUserMedia({ video: true })
  .then((stream) => {
    video.srcObject = stream;
  })
  .catch((error) => {
    alert("Camera access denied!");
    console.error("Camera Error:", error);
  });

// Capture photo
function capture() {
  const canvas = document.createElement("canvas");
  canvas.width = video.videoWidth;
  canvas.height = video.videoHeight;

  const ctx = canvas.getContext("2d");
  ctx.drawImage(video, 0, 0);

  const imageData = canvas.toDataURL("image/png");

  if (capturedImages.length < 3) {
    capturedImages.push(imageData);
  }

  if (capturedImages.length === 3) {
    captureBtn.disabled = true;
    createPhotoCard();
  }
}

// Create final photo card
function createPhotoCard() {
  const cardCanvas = document.createElement("canvas");
  const width = 500;
  const height = 600;
  cardCanvas.width = width;
  cardCanvas.height = height;

  const ctx = cardCanvas.getContext("2d");

  // Love theme background
  const gradient = ctx.createLinearGradient(0, 0, 0, height);
  gradient.addColorStop(0, "#ffc0cb");
  gradient.addColorStop(1, "#ffe6f0");
  ctx.fillStyle = gradient;
  ctx.fillRect(0, 0, width, height);

  // Add hearts background lightly
  ctx.font = "24px Arial";
  ctx.fillStyle = "#ffb6c1";
  for (let i = 0; i < 20; i++) {
    ctx.fillText("❤️", Math.random() * width, Math.random() * height);
  }

  // Beautiful title
  ctx.fillStyle = "#d6006d";
  ctx.font = "bold 28px 'Arial'";
  ctx.textAlign = "center";
  ctx.fillText("You're so beautiful 💖", width / 2, 50);

  // Image layout with spacing
  const imgSize = 120;
  const spacing = 20;
  const totalWidth = imgSize * 3 + spacing * 2;
  const startX = (width - totalWidth) / 2;
  const y = 100;

  let loaded = 0;

  photos.innerHTML = "<p>Generating your love card...</p>";

  capturedImages.forEach((src, i) => {
    const img = new Image();
    img.onload = () => {
      const aspectRatio = img.width / img.height;
      let drawWidth = imgSize;
      let drawHeight = imgSize;

      if (aspectRatio > 1) {
        drawHeight = imgSize;
        drawWidth = imgSize * aspectRatio;
      } else {
        drawWidth = imgSize;
        drawHeight = imgSize / aspectRatio;
      }

      // Polaroid frame
      const frameX = startX + i * (imgSize + spacing);
      ctx.fillStyle = "#fff";
      ctx.fillRect(frameX - 5, y - 5, imgSize + 10, imgSize + 10);

      ctx.drawImage(img, frameX, y, imgSize, imgSize);

      loaded++;
      if (loaded === 3) {
        const dataURL = cardCanvas.toDataURL("image/png");

        // Card preview
        const preview = document.createElement("img");
        preview.src = dataURL;
        preview.style.width = "300px";
        preview.style.border = "2px solid pink";
        preview.style.borderRadius = "15px";
        preview.style.marginTop = "20px";
        preview.style.boxShadow = "0 0 15px rgba(255, 20, 147, 0.6)";

        // Download button
        const btn = document.createElement("a");
        btn.href = dataURL;
        btn.download = "love-card.png";
        btn.innerText = "Download Your Love Card 💘";
        btn.style.display = "inline-block";
        btn.style.marginTop = "12px";
        btn.style.padding = "10px 20px";
        btn.style.backgroundColor = "#d6006d";
        btn.style.color = "#fff";
        btn.style.borderRadius = "8px";
        btn.style.textDecoration = "none";
        btn.style.fontWeight = "bold";

        // Final display
        photos.innerHTML = "";
        photos.appendChild(preview);
        photos.appendChild(btn);
      }
    };
    img.src = src;
  });
}

/* Base styles */
body {
  margin: 0;
  padding: 0;
  font-family: "Segoe UI", sans-serif;
  background: linear-gradient(to bottom, #fff0f5, #ffe6f0);
  color: #333;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh;
  overflow-x: hidden;
}

h1 {
  margin-top: 20px;
  font-size: 2rem;
  color: #d6006d;
  text-align: center;
}

#video-container {
  position: relative;
  width: 100%;
  max-width: 90vw;
  margin: 20px auto;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 0 15px rgba(255, 105, 180, 0.5);
}

video {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 12px;
}

#capture-btn {
  padding: 12px 24px;
  background-color: #d6006d;
  color: white;
  font-weight: bold;
  font-size: 1rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  margin: 20px 0;
  box-shadow: 0 4px 10px rgba(255, 20, 147, 0.4);
  transition: background 0.3s;
}

#capture-btn:hover {
  background-color: #a80053;
}

#photos {
  margin-top: 20px;
  text-align: center;
  padding: 10px;
  max-width: 95vw;
}

#photos img {
  width: 100%;
  max-width: 350px;
  border-radius: 15px;
  margin: 10px auto;
}

a {
  text-decoration: none;
}

/* Responsive layout */
@media screen and (max-width: 768px) {
  h1 {
    font-size: 1.5rem;
  }

  #capture-btn {
    font-size: 0.9rem;
    padding: 10px 18px;
  }
}

@media screen and (max-width: 480px) {
  #photos img {
    max-width: 90vw;
  }
}
